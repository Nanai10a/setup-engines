name: setup-engines
description: setup engines in package.json automatically

runs:
  using: "composite"
  steps:
    - id: corepack
      shell: bash
      run: |
        export VERSION=$(curl -s https://nodejs.org/download/nightly/index.json | jq -c '.[0].version' | sed 's/"//g')
        curl https://nodejs.org/download/nightly/$VERSION/node-$VERSION-linux-x64.tar.xz -so- | tar -xJC /tmp node-$VERSION-linux-x64/{bin,lib}
        mkdir /tmp/nnode  && mv /tmp/node-$VERSION-linux-x64/{bin,lib} /tmp/nnode
        rmdir /tmp/node-$VERSION-linux-x64 && unset VERSION
        echo 'bin=/tmp/nnode/bin/corepack' >> $GITHUB_OUTPUT

    - id: json
      shell: bash
      run: echo "txt=$(cat package.json | jq -c '.engines')" >> $GITHUB_OUTPUT

    - id: engines
      shell: bash
      run: |
        echo "node=${{ fromJSON(steps.json.outputs.txt).node }}" >> $GITHUB_OUTPUT
        echo "yarn=${{ fromJSON(steps.json.outputs.txt).yarn }}" >> $GITHUB_OUTPUT
        echo "pnpm=${{ fromJSON(steps.json.outputs.txt).pnpm }}" >> $GITHUB_OUTPUT

    - name: setup node
      if: steps.engines.outputs.node != ''
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.engines.outputs.node }}

    - name: setup yarn
      if: steps.engines.outputs.yarn != ''
      shell: bash
      run: ${{ steps.corepack.outputs.bin }} prepare --activate yarn@${{ steps.engines.outputs.yarn }}

    - name: setup pnpm
      if: steps.engines.outputs.pnpm != ''
      shell: bash
      run: ${{ steps.corepack.outputs.bin }} prepare --activate pnpm@${{ steps.engines.outputs.pnpm }}
